name: Deploy to production
on:
  push:
    branches:
      - production
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Install kubectl
        uses: azure/setup-kubectl@v1
      - name: Log in to gcloud CLI
        run: gcloud auth configure-docker
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Write Dashboard Environment Variables
        run: |
          cat >./dashboard/.env <<EOL
          NODE_ENV=production
          API_SERVER=dashboard.getporter.dev
          FULLSTORY_ORG_ID=${{secrets.FULLSTORY_ORG_ID}}
          DISCORD_KEY=${{secrets.DISCORD_KEY}}
          DISCORD_CID=${{secrets.DISCORD_CID}}
          FEEDBACK_ENDPOINT=${{secrets.FEEDBACK_ENDPOINT}}
          POSTHOG_API_KEY=${{secrets.POSTHOG_API_KEY}}
          POSTHOG_HOST=${{secrets.POSTHOG_HOST}}
          SEGMENT_PUBLIC_KEY=${{secrets.SEGMENT_PUBLIC_KEY}}
          APPLICATION_CHART_REPO_URL=https://charts.getporter.dev
          ADDON_CHART_REPO_URL=https://chart-addons.getporter.dev
          EOL
      - name: Build
        run: |
          DOCKER_BUILDKIT=1 docker build . -t gcr.io/porter-dev-273614/porter:latest -f ./docker/Dockerfile --build-arg version=production
      - name: Push
        run: |
          docker push gcr.io/porter-dev-273614/porter:latest
      - name: Deploy to cluster
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name production-2
            
          kubectl rollout restart deployment/porter
